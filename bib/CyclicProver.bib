@incollection{Brotherston2012,
	address = {Berlin, Heidelberg},
	title = {A {Generic} {Cyclic} {Theorem} {Prover}},
	volume = {7705},
	isbn = {978-3-642-35181-5 978-3-642-35182-2},
	url = {http://link.springer.com/10.1007/978-3-642-35182-2_25},
	abstract = {We describe the design and implementation of an automated theorem prover realising a fully general notion of cyclic proof. Our tool, called Cyclist, is able to construct proofs obeying a very general cycle scheme in which leaves may be linked to any other matching node in the proof, and to verify the general, global inﬁnitary condition on such proof objects ensuring their soundness. Cyclist is based on a new, generic theory of cyclic proofs that can be instantiated to a wide variety of logics. We have developed three such concrete instantiations, based on: (a) ﬁrst-order logic with inductive deﬁnitions; (b) entailments of pure separation logic; and (c) Hoare-style termination proofs for pointer programs. Experiments run on these instantiations indicate that Cyclist oﬀers signiﬁcant potential as a future platform for inductive theorem proving.},
	language = {en},
	urldate = {2019-05-09},
	booktitle = {Programming {Languages} and {Systems}},
	publisher = {Springer Berlin Heidelberg},
	author = {Brotherston, James and Gorogiannis, Nikos and Petersen, Rasmus L.},
	editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard and Jhala, Ranjit and Igarashi, Atsushi},
	year = {2012},
	doi = {10.1007/978-3-642-35182-2_25},
	pages = {350--367},
	file = {Brotherston et al. - 2012 - A Generic Cyclic Theorem Prover.pdf:files/1784/Brotherston et al. - 2012 - A Generic Cyclic Theorem Prover.pdf:application/pdf}
}
